<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.dao.UserMapper">
	<resultMap id="BaseResultMap" type="com.example.model.User">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="user_name" property="userName"
			jdbcType="VARCHAR" />
		<result column="pass_word" property="passWord"
			jdbcType="VARCHAR" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="email" property="email" jdbcType="VARCHAR" />
		<result column="create_time" property="createTime"
			jdbcType="TIMESTAMP" />
		<result column="last_login_time" property="lastLoginTime"
			jdbcType="TIMESTAMP" />
		<result column="status" property="status" jdbcType="INTEGER" />
	</resultMap>
	<sql id="Base_Column_List">
		id, user_name, pass_word, name, email, create_time, last_login_time,
		status
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from user
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey"
		parameterType="java.lang.Integer">
		delete from user
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.example.model.User">
		insert into user (id, user_name, pass_word,
		name, email, create_time,
		last_login_time, status)
		values (#{id,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR},
		#{passWord,jdbcType=VARCHAR},
		#{name,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP},
		#{lastLoginTime,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective"
		parameterType="com.example.model.User">
		insert into user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="userName != null">
				user_name,
			</if>
			<if test="passWord != null">
				pass_word,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="email != null">
				email,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="lastLoginTime != null">
				last_login_time,
			</if>
			<if test="status != null">
				status,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="userName != null">
				#{userName,jdbcType=VARCHAR},
			</if>
			<if test="passWord != null">
				#{passWord,jdbcType=VARCHAR},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				#{email,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="lastLoginTime != null">
				#{lastLoginTime,jdbcType=TIMESTAMP},
			</if>
			<if test="status != null">
				#{status,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective"
		parameterType="com.example.model.User">
		update user
		<set>
			<if test="userName != null">
				user_name = #{userName,jdbcType=VARCHAR},
			</if>
			<if test="passWord != null">
				pass_word = #{passWord,jdbcType=VARCHAR},
			</if>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				email = #{email,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="lastLoginTime != null">
				last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
			</if>
			<if test="status != null">
				status = #{status,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="com.example.model.User">
		update user
		set user_name = #{userName,jdbcType=VARCHAR},
		pass_word = #{passWord,jdbcType=VARCHAR},
		name = #{name,jdbcType=VARCHAR},
		email = #{email,jdbcType=VARCHAR},
		create_time = #{createTime,jdbcType=TIMESTAMP},
		last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
		status = #{status,jdbcType=INTEGER}
		where id = #{id,jdbcType=INTEGER}
	</update>

	<select id="findByUserName" parameterType="java.lang.String" resultMap="BaseResultMap">
		select 
		<include refid="Base_Column_List"></include>
		from user
		where user_name = #{userName,jdbcType=VARCHAR}
	</select>
</mapper>