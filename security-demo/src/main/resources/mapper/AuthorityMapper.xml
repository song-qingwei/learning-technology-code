<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.dao.AuthorityMapper">
	<resultMap id="BaseResultMap"
		type="com.example.model.Authority">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="url" property="url" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		id, name, url
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from authority
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey"
		parameterType="java.lang.Integer">
		delete from authority
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.example.model.Authority">
		insert into authority (id, name, url
		)
		values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR},
		#{url,jdbcType=VARCHAR}
		)
	</insert>
	<insert id="insertSelective"
		parameterType="com.example.model.Authority">
		insert into authority
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="url != null">
				url,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="url != null">
				#{url,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective"
		parameterType="com.example.model.Authority">
		update authority
		<set>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="url != null">
				url = #{url,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="com.example.model.Authority">
		update authority
		set name = #{name,jdbcType=VARCHAR},
		url = #{url,jdbcType=VARCHAR}
		where id = #{id,jdbcType=INTEGER}
	</update>
	
	<select id="findByUserId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
		select
		a.*
		from authority a
		left join role_authority ra on ra.authority_id = a.id
		left join role r on r.id = ra.role_id
		left join user_role ur on ur.role_id = r.id
		left join user u on u.id = ur.user_id
		where u.id = #{userId, jdbcType=INTEGER}
	</select>
	
	<select id="findAll" resultMap="BaseResultMap">
		select 
		<include refid="Base_Column_List"></include> 
		from authority
	</select>
</mapper>